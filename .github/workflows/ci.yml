name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_VERSION: '3.11'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ai_playground_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout –∫–æ–¥
      uses: actions/checkout@v4

    - name: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'

    - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .

    - name: –õ–∏–Ω—Ç–µ—Ä—ã –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
      run: |
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        black --check backend/ ml_core/ tests/
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏–º–ø–æ—Ä—Ç–æ–≤
        isort --check-only backend/ ml_core/ tests/
        
        # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑
        flake8 backend/ ml_core/ tests/
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤
        mypy backend/ ml_core/ --ignore-missing-imports --disable-error-code=misc --disable-error-code=unused-ignore --disable-error-code=no-any-return

    - name: –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
      env:
        DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/ai_playground_test
        SECRET_KEY: test-secret-key-for-ci-pipeline
        ENVIRONMENT: testing
      run: |
        pytest --cov=backend --cov=ml_core --cov-report=xml --cov-report=term-missing

    - name: –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–∫—Ä—ã—Ç–∏—è –≤ Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout –∫–æ–¥
      uses: actions/checkout@v4

    - name: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: –í—Ö–æ–¥ –≤ Docker Hub
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ secrets.DOCKER_USERNAME }}/ai-backend-playground
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: –°–±–æ—Ä–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—Ä–∞–∑–∞
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout –∫–æ–¥
      uses: actions/checkout@v4

    - name: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit

    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      run: |
        safety check --full-report

    - name: –ê–Ω–∞–ª–∏–∑ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∫–æ–¥–∞
      run: |
        bandit -r backend/ ml_core/ -f json -o bandit-report.json || true

    - name: –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç—á–µ—Ç–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: bandit-report.json

  deploy:
    runs-on: ubuntu-latest
    needs: [test, build, security]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    environment:
      name: production
      url: https://your-app-url.com

    steps:
    - name: Checkout –∫–æ–¥
      uses: actions/checkout@v4

    - name: –î–µ–ø–ª–æ–π –Ω–∞ production
      run: |
        echo "üöÄ –ó–¥–µ—Å—å –±—É–¥–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–µ–ø–ª–æ—è –Ω–∞ –æ–±–ª–∞—á–Ω—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É"
        echo "–ù–∞–ø—Ä–∏–º–µ—Ä: Heroku, Railway, DigitalOcean, AWS, etc."
        # –ü—Ä–∏–º–µ—Ä –¥–ª—è Heroku:
        # git remote add heroku https://git.heroku.com/your-app-name.git
        # git push heroku main

    - name: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–µ–ø–ª–æ–µ
      run: |
        echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ!"
        echo "üìä –í–µ—Ä—Å–∏—è: ${{ github.sha }}"
        echo "üåê URL: https://your-app-url.com"
